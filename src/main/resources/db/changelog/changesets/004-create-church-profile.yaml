databaseChangeLog:
  - changeSet:
      id: 004-create-church-profile
      author: chapelchat
      preConditions:
        - dbms:
            type: postgresql
      changes:
        - sql:
            comment: enable pgcrypto for gen_random_uuid()
            splitStatements: false
            stripComments: true
            sql: CREATE EXTENSION IF NOT EXISTS pgcrypto;

        - createTable:
            tableName: church_profile
            remarks: JSONB source of truth for each church’s published profile
            columns:
              - column:
                  name: id
                  type: uuid
                  defaultValueComputed: gen_random_uuid()
                  constraints:
                    primaryKey: true
                    primaryKeyName: pk_church_profile
                    nullable: false
              - column:
                  name: slug
                  type: text
                  constraints:
                    nullable: false
              - column:
                  name: profile
                  type: jsonb
                  constraints:
                    nullable: false
              - column:
                  name: is_published
                  type: boolean
                  defaultValueBoolean: true
                  constraints:
                    nullable: false
              - column:
                  name: updated_by
                  type: text
                  constraints:
                    nullable: true
              - column:
                  name: church_id
                  type: VARCHAR(255)
                  constraints:
                    nullable: false
              - column:
                  name: updated_at
                  type: timestamptz
                  defaultValueComputed: now()
                  constraints:
                    nullable: false
        - addForeignKeyConstraint:
            baseTableName: church_profile
            baseColumnNames: church_id
            referencedTableName: church
            referencedColumnNames: id
            constraintName: fk_church_profile_church
        # Check constraint (OSS via raw SQL)
        - sql:
            comment: require minimal JSON shape
            splitStatements: false
            stripComments: true
            sql: |
                ALTER TABLE church_profile
                ADD CONSTRAINT ck_church_profile_required_fields
                CHECK (
                    jsonb_exists(profile, 'organizationName')
                    AND jsonb_exists(profile, 'location')
                    AND jsonb_exists(profile, 'tone')
                );
        # Case-insensitive unique slug
        - sql:
            comment: unique, case-insensitive slug
            splitStatements: false
            stripComments: true
            sql: |
              CREATE UNIQUE INDEX IF NOT EXISTS uq_church_profile_slug_ci
              ON church_profile (lower(slug));

        - createIndex:
            tableName: church_profile
            indexName: idx_church_profile_published
            columns:
              - column:
                  name: is_published

        - sql:
            comment: GIN index for JSONB queries
            splitStatements: false
            stripComments: true
            sql: |
              CREATE INDEX IF NOT EXISTS idx_church_profile_profile_gin
              ON church_profile USING gin (profile jsonb_path_ops);

        - sql:
            comment: trigger to maintain updated_at on UPDATE
            splitStatements: false
            stripComments: true
            sql: |
              CREATE OR REPLACE FUNCTION set_updated_at() RETURNS trigger AS $$
              BEGIN
                NEW.updated_at := now();
                RETURN NEW;
              END;
              $$ LANGUAGE plpgsql;

              DROP TRIGGER IF EXISTS trg_church_profile_updated ON church_profile;
              CREATE TRIGGER trg_church_profile_updated
              BEFORE UPDATE ON church_profile
              FOR EACH ROW EXECUTE FUNCTION set_updated_at();

      rollback:
        - sql: |
            DROP TRIGGER IF EXISTS trg_church_profile_updated ON church_profile;
            DROP FUNCTION IF EXISTS set_updated_at();
            DROP INDEX IF EXISTS idx_church_profile_profile_gin;
            DROP INDEX IF EXISTS idx_church_profile_published;
            DROP INDEX IF EXISTS uq_church_profile_slug_ci;
            DROP TABLE IF EXISTS church_profile;

# 1) Enable citext once per DB
  - changeSet:
        id: 20250811-01-enable-citext
        author: erik
        changes:
        - sql:
            splitStatements: false
            stripComments: true
            sql: "CREATE EXTENSION IF NOT EXISTS citext;"

# 2) Move to CITEXT + real UNIQUE constraint (replaces the functional index)
  - changeSet:
        id: 20250811-02-slug-citext-unique
        author: erik
        comments: >
          Switch slug to CITEXT and enforce a real UNIQUE(slug) constraint to get
          case-insensitive uniqueness at the column level and allow standard
          `ON CONFLICT (slug)` upserts. Drops the old functional unique index on
          lower(slug) which couldn’t be targeted by `ON CONFLICT`.
        changes:
        - dropIndex:
            tableName: church_profile
            indexName: uq_church_profile_slug_ci
            ifExists: true
        - sql:
            splitStatements: false
            stripComments: true
            sql: "ALTER TABLE church_profile ALTER COLUMN slug TYPE CITEXT;"
        - addUniqueConstraint:
            tableName: church_profile
            columnNames: slug
            constraintName: uq_church_profile_slug
  - changeSet:
      id: 20250811-03-seed-church-profile-hope-baptist
      author: erik
      context: seed
      changes:
        - sql:
            splitStatements: false
            stripComments: true
            sql: |
              INSERT INTO church_profile (slug, profile, is_published, updated_by, church_id)
              VALUES (
                'hope-baptist',
                $${
                  "organizationName": "Hope Baptist Church",
                  "location": {
                    "address": "123 Main St",
                    "city": "Fishers",
                    "state": "IN",
                    "postalCode": "46038"
                  },
                  "tone": "friendly, welcoming, gospel-centered",
                  "serviceTimes": [
                    { "day": "Sunday", "time": "10:00 AM" }
                  ],
                  "contact": { "email": "info@hopebaptist.example", "phone": "555-123-4567" },
                  "website": "https://www.hopebaptist.example"
                }$$::jsonb,
                true,
                'seed',
                'hope-baptist'
              )
              ON CONFLICT (slug) DO UPDATE SET
                profile      = EXCLUDED.profile,
                is_published = EXCLUDED.is_published,
                updated_by   = EXCLUDED.updated_by,
                church_id    = EXCLUDED.church_id;
      rollback:
        - sql: "DELETE FROM church_profile WHERE slug = 'hope-baptist';"
        
