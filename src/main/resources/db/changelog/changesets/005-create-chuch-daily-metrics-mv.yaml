databaseChangeLog:
  - changeSet:
      id: 20250812-01-create-church-daily-metrics-mv
      author: erik
      dbms: postgresql
      comments: >
        Create a materialized view of daily rollups per church for fast dashboards.
        We keep a UNIQUE (church_id, day) index so we can refresh concurrently later.
      preConditions:
        - onFail: MARK_RAN
        - sqlCheck:
            expectedResult: 0
            sql: |
              SELECT COUNT(*) FROM pg_matviews
              WHERE schemaname = current_schema()
                AND matviewname = 'church_daily_metrics';
      changes:
        - sql:
            splitStatements: false
            stripComments: true
            sql: |
              CREATE MATERIALIZED VIEW church_daily_metrics AS
              SELECT
                l.church_id,
                date_trunc('day', m.timestamp)::date       AS day,
                COUNT(*)                                    AS conversations,
                COUNT(DISTINCT l.session_id)                AS sessions,
                ROUND(AVG(m.latency_ms))::int               AS avg_latency_ms,
                PERCENTILE_CONT(0.95) WITHIN GROUP (ORDER BY m.latency_ms)::int AS p95_latency_ms,
                COALESCE(SUM(m.total_tokens),0)             AS tokens,
                COALESCE(SUM(m.cost_usd),0)::numeric(12,4)  AS cost_usd,
                SUM(CASE WHEN m.flagged THEN 1 ELSE 0 END)  AS flagged_count
              FROM chat_log_metrics m
              JOIN chat_logs l ON l.id = m.chat_log_id
              GROUP BY l.church_id, date_trunc('day', m.timestamp);

        - sql:
            splitStatements: false
            stripComments: true
            sql: |
              CREATE UNIQUE INDEX IF NOT EXISTS uq_cdm_church_day
                ON church_daily_metrics (church_id, day);

      rollback:
        - sql: "DROP INDEX IF EXISTS uq_cdm_church_day;"
        - sql: "DROP MATERIALIZED VIEW IF EXISTS church_daily_metrics;"
